2019-08-08 09:59:33.813 +12:00 [INF] User profile is available. Using 'C:\Users\zhuyi\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-08-08 09:59:35.262 +12:00 [INF] Setting up the time host service. Everyday run at 23pm
2019-08-08 09:59:37.143 +12:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/  
2019-08-08 09:59:37.215 +12:00 [WRN] Failed to determine the https port for redirect.
2019-08-08 09:59:37.474 +12:00 [INF] 
2019-08-08 09:59:38.266 +12:00 [INF] Response 
2019-08-08 09:59:38.279 +12:00 [INF] Request finished in 1138.918ms 404 
2019-08-08 10:00:07.091 +12:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/Dashboard/1  
2019-08-08 10:00:07.098 +12:00 [INF] 
2019-08-08 10:00:07.134 +12:00 [INF] Route matched with {action = "Get", controller = "Dashboard"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String) on controller Pegasus_backend.Controllers.DashboardController (Pegasus_backend).
2019-08-08 10:00:07.326 +12:00 [INF] Executing action method Pegasus_backend.Controllers.DashboardController.Get (Pegasus_backend) - Validation state: "Valid"
2019-08-08 10:00:13.728 +12:00 [INF] Entity Framework Core 2.1.11-servicing-32099 initialized 'ablemusicContext' using provider 'MySql.Data.EntityFrameworkCore' with options: None
2019-08-08 10:17:09.456 +12:00 [WRN] The LINQ expression 'where ((([l].BeginTime != null) AndAlso (Convert([l].BeginTime, DateTime).Date == ___today_Date_0)) AndAlso {___orgIds_1 => Contains(Convert([l].OrgId, Int32))})' could not be translated and will be evaluated locally.
2019-08-08 10:17:09.469 +12:00 [WRN] The LINQ expression 'Contains(Convert([l].OrgId, Int32))' could not be translated and will be evaluated locally.
2019-08-08 10:17:10.911 +12:00 [INF] Executed DbCommand (94ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `l`.`lesson_id`, `l`.`begin_time`, `l`.`course_instance_id`, `l`.`created_at`, `l`.`end_time`, `l`.`group_course_instance_id`, `l`.`invoice_num`, `l`.`is_canceled`, `l`.`is_changed`, `l`.`is_confirm`, `l`.`is_paid`, `l`.`is_trial`, `l`.`learner_id`, `l`.`new_lesson_id`, `l`.`org_id`, `l`.`reason`, `l`.`room_id`, `l`.`teacher_id`, `l`.`trial_course_id`
FROM `ablemusic`.`lesson` AS `l`
WHERE (`l`.`is_canceled` <> 1) OR `l`.`is_canceled` IS NULL
2019-08-08 10:17:11.256 +12:00 [WRN] The LINQ expression 'where (((([l].BeginTime != null) AndAlso (Convert([l].BeginTime, DateTime).Date == ___today_Date_0)) AndAlso (Convert([l].IsTrial, Nullable`1) == 1)) AndAlso {___orgIds_1 => Contains(Convert([l].OrgId, Int32))})' could not be translated and will be evaluated locally.
2019-08-08 10:17:11.257 +12:00 [WRN] The LINQ expression 'Contains(Convert([l].OrgId, Int32))' could not be translated and will be evaluated locally.
2019-08-08 10:17:11.510 +12:00 [INF] Executed DbCommand (81ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `l`.`lesson_id`, `l`.`begin_time`, `l`.`course_instance_id`, `l`.`created_at`, `l`.`end_time`, `l`.`group_course_instance_id`, `l`.`invoice_num`, `l`.`is_canceled`, `l`.`is_changed`, `l`.`is_confirm`, `l`.`is_paid`, `l`.`is_trial`, `l`.`learner_id`, `l`.`new_lesson_id`, `l`.`org_id`, `l`.`reason`, `l`.`room_id`, `l`.`teacher_id`, `l`.`trial_course_id`
FROM `ablemusic`.`lesson` AS `l`
WHERE (`l`.`is_canceled` <> 1) OR `l`.`is_canceled` IS NULL
2019-08-08 10:17:11.870 +12:00 [WRN] The LINQ expression 'where (([l].EnrollDate != null) AndAlso (___today_Date_0 == Convert([l].EnrollDate, DateTime).Date))' could not be translated and will be evaluated locally.
2019-08-08 10:17:12.453 +12:00 [INF] Executed DbCommand (380ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `l`.`learner_id`, `l`.`address`, `l`.`comment`, `l`.`contact_num`, `l`.`created_at`, `l`.`dob`, `l`.`email`, `l`.`enroll_date`, `l`.`first_name`, `l`.`form_url`, `l`.`g5_certification`, `l`.`gender`, `l`.`is_abrsm_g5`, `l`.`is_active`, `l`.`is_under_18`, `l`.`last_name`, `l`.`learner_level`, `l`.`level_type`, `l`.`middle_name`, `l`.`note`, `l`.`org_id`, `l`.`otherfile_url`, `l`.`payment_period`, `l`.`photo`, `l`.`referrer`, `l`.`referrer_learner_id`, `l`.`user_id`
FROM `ablemusic`.`learner` AS `l`
WHERE `l`.`org_id` IN (1)
2019-08-08 10:17:12.815 +12:00 [INF] Executed DbCommand (118ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `w`.`waiting_id`, `w`.`begin_date`, `w`.`comment`, `w`.`concert_fee`, `w`.`concert_fee_name`, `w`.`course_instance_id`, `w`.`course_name`, `w`.`created_at`, `w`.`due_date`, `w`.`end_date`, `w`.`group_course_instance_id`, `w`.`invoice_num`, `w`.`is_activate`, `w`.`is_confirmed`, `w`.`is_email_sent`, `w`.`is_paid`, `w`.`learner_id`, `w`.`learner_name`, `w`.`lesson_fee`, `w`.`lesson_note_fee_name`, `w`.`lesson_quantity`, `w`.`note_fee`, `w`.`other1_fee`, `w`.`other1_fee_name`, `w`.`other2_fee`, `w`.`other2_fee_name`, `w`.`other3_fee`, `w`.`other3_fee_name`, `w`.`owing_fee`, `w`.`paid_fee`, `w`.`term_id`, `w`.`total_fee`
FROM `ablemusic`.`invoice_waiting_confirm` AS `w`
INNER JOIN `ablemusic`.`learner` AS `l` ON `w`.`learner_id` = `l`.`learner_id`
WHERE `l`.`org_id` IN (1) AND (`w`.`is_confirmed` = 0)
2019-08-08 10:17:13.020 +12:00 [WRN] The LINQ expression 'where (Convert([l].BeginTime, DateTime).Date == ___today_Date_1)' could not be translated and will be evaluated locally.
2019-08-08 10:17:13.377 +12:00 [INF] Executed DbCommand (128ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `l`.`lesson_id`, `l`.`begin_time`, `l`.`course_instance_id`, `l`.`created_at`, `l`.`end_time`, `l`.`group_course_instance_id`, `l`.`invoice_num`, `l`.`is_canceled`, `l`.`is_changed`, `l`.`is_confirm`, `l`.`is_paid`, `l`.`is_trial`, `l`.`learner_id`, `l`.`new_lesson_id`, `l`.`org_id`, `l`.`reason`, `l`.`room_id`, `l`.`teacher_id`, `l`.`trial_course_id`
FROM `ablemusic`.`lesson` AS `l`
WHERE (`l`.`begin_time` IS NOT NULL AND (`l`.`is_canceled` = 1)) AND `l`.`org_id` IN (1)
2019-08-08 10:17:13.432 +12:00 [WRN] The LINQ expression 'where (Convert([l].BeginTime, DateTime).Date == ___today_Date_1)' could not be translated and will be evaluated locally.
2019-08-08 10:17:14.082 +12:00 [INF] Executed DbCommand (373ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `l`.`lesson_id`, `l`.`begin_time`, `l`.`course_instance_id`, `l`.`created_at`, `l`.`end_time`, `l`.`group_course_instance_id`, `l`.`invoice_num`, `l`.`is_canceled`, `l`.`is_changed`, `l`.`is_confirm`, `l`.`is_paid`, `l`.`is_trial`, `l`.`learner_id`, `l`.`new_lesson_id`, `l`.`org_id`, `l`.`reason`, `l`.`room_id`, `l`.`teacher_id`, `l`.`trial_course_id`
FROM `ablemusic`.`lesson` AS `l`
WHERE ((`l`.`begin_time` IS NOT NULL AND `l`.`org_id` IN (1)) AND ((`l`.`is_canceled` <> 1) OR `l`.`is_canceled` IS NULL)) AND (`l`.`is_changed` = 1)
2019-08-08 10:17:14.090 +12:00 [WRN] The LINQ expression 'where ((([a].EndDate != null) AndAlso (Convert([a].AmendType, Nullable`1) == 1)) AndAlso (___today_Date_0 == Convert([a].EndDate, DateTime).Date))' could not be translated and will be evaluated locally.
2019-08-08 10:17:14.691 +12:00 [INF] Executed DbCommand (94ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `a`.`amendment_id`, `a`.`amend_type`, `a`.`begin_date`, `a`.`begin_time`, `a`.`course_instance_id`, `a`.`course_schedule_id`, `a`.`created_at`, `a`.`day_of_week`, `a`.`end_date`, `a`.`end_time`, `a`.`is_temporary`, `a`.`learner_id`, `a`.`org_id`, `a`.`reason`, `a`.`room_id`, `a`.`teacher_id`
FROM `ablemusic`.`amendment` AS `a`
WHERE `a`.`org_id` IN (1)
2019-08-08 10:17:14.712 +12:00 [WRN] The LINQ expression 'where ((([a].EndDate != null) AndAlso (Convert([a].AmendType, Nullable`1) == 2)) AndAlso (___today_Date_0 == Convert([a].EndDate, DateTime).Date))' could not be translated and will be evaluated locally.
2019-08-08 10:17:15.606 +12:00 [INF] Executed DbCommand (407ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `a`.`amendment_id`, `a`.`amend_type`, `a`.`begin_date`, `a`.`begin_time`, `a`.`course_instance_id`, `a`.`course_schedule_id`, `a`.`created_at`, `a`.`day_of_week`, `a`.`end_date`, `a`.`end_time`, `a`.`is_temporary`, `a`.`learner_id`, `a`.`org_id`, `a`.`reason`, `a`.`room_id`, `a`.`teacher_id`
FROM `ablemusic`.`amendment` AS `a`
WHERE `a`.`org_id` IN (1)
2019-08-08 10:17:42.240 +12:00 [INF] Executed DbCommand (72ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `l`.`lesson_id`, `l`.`begin_time`, `l`.`course_instance_id`, `l`.`created_at`, `l`.`end_time`, `l`.`group_course_instance_id`, `l`.`invoice_num`, `l`.`is_canceled`, `l`.`is_changed`, `l`.`is_confirm`, `l`.`is_paid`, `l`.`is_trial`, `l`.`learner_id`, `l`.`new_lesson_id`, `l`.`org_id`, `l`.`reason`, `l`.`room_id`, `l`.`teacher_id`, `l`.`trial_course_id`
FROM `ablemusic`.`lesson` AS `l`
WHERE (`l`.`is_canceled` <> 1) OR `l`.`is_canceled` IS NULL
2019-08-08 10:17:49.195 +12:00 [INF] Executed action Pegasus_backend.Controllers.DashboardController.Get (Pegasus_backend) in 1062059.1024ms
2019-08-08 10:17:49.198 +12:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Nullable object must have a value.
   at System.Nullable`1.get_Value()
   at Pegasus_backend.Services.DashboardService.getLearnerWithRemainLessonsForToday(Int32 numOfRemainLesson) in c:\source\pegasusBackend\Services\DashboardService.cs:line 199
   at Pegasus_backend.Controllers.DashboardController.Get(String orgIDsStr) in c:\source\pegasusBackend\Controllers\DashboardController.cs:line 45
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.Invoke(HttpContext context)
2019-08-08 10:17:49.375 +12:00 [INF] Response {"IsSuccess":false,"ErrorCode":null,"IsFound":true,"ErrorMessage":"Global Exception was Caught: System.InvalidOperationException: Nullable object must have a value.\r\n   at System.Nullable`1.get_Value()\r\n   at Pegasus_backend.Services.DashboardService.getLearnerWithRemainLessonsForToday(Int32 numOfRemainLesson) in c:\\source\\pegasusBackend\\Services\\DashboardService.cs:line 199\r\n   at Pegasus_backend.Controllers.DashboardController.Get(String orgIDsStr) in c:\\source\\pegasusBackend\\Controllers\\DashboardController.cs:line 45\r\n   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.Invoke(HttpContext context)","Note":null,"Data":null}
2019-08-08 10:17:49.383 +12:00 [INF] Request finished in 1062290.9194ms 500 application/json
2019-08-08 10:18:10.228 +12:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/Dashboard/1  
2019-08-08 10:18:10.232 +12:00 [INF] 
2019-08-08 10:18:10.235 +12:00 [INF] Route matched with {action = "Get", controller = "Dashboard"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String) on controller Pegasus_backend.Controllers.DashboardController (Pegasus_backend).
2019-08-08 10:18:10.241 +12:00 [INF] Executing action method Pegasus_backend.Controllers.DashboardController.Get (Pegasus_backend) - Validation state: "Valid"
2019-08-08 10:18:31.262 +12:00 [INF] Entity Framework Core 2.1.11-servicing-32099 initialized 'ablemusicContext' using provider 'MySql.Data.EntityFrameworkCore' with options: None
2019-08-08 10:18:31.447 +12:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `l`.`lesson_id`, `l`.`begin_time`, `l`.`course_instance_id`, `l`.`created_at`, `l`.`end_time`, `l`.`group_course_instance_id`, `l`.`invoice_num`, `l`.`is_canceled`, `l`.`is_changed`, `l`.`is_confirm`, `l`.`is_paid`, `l`.`is_trial`, `l`.`learner_id`, `l`.`new_lesson_id`, `l`.`org_id`, `l`.`reason`, `l`.`room_id`, `l`.`teacher_id`, `l`.`trial_course_id`
FROM `ablemusic`.`lesson` AS `l`
WHERE (`l`.`is_canceled` <> 1) OR `l`.`is_canceled` IS NULL
2019-08-08 10:18:35.426 +12:00 [INF] Executed DbCommand (55ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `l`.`lesson_id`, `l`.`begin_time`, `l`.`course_instance_id`, `l`.`created_at`, `l`.`end_time`, `l`.`group_course_instance_id`, `l`.`invoice_num`, `l`.`is_canceled`, `l`.`is_changed`, `l`.`is_confirm`, `l`.`is_paid`, `l`.`is_trial`, `l`.`learner_id`, `l`.`new_lesson_id`, `l`.`org_id`, `l`.`reason`, `l`.`room_id`, `l`.`teacher_id`, `l`.`trial_course_id`
FROM `ablemusic`.`lesson` AS `l`
WHERE (`l`.`is_canceled` <> 1) OR `l`.`is_canceled` IS NULL
2019-08-08 10:18:36.018 +12:00 [INF] Executed DbCommand (55ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `l`.`learner_id`, `l`.`address`, `l`.`comment`, `l`.`contact_num`, `l`.`created_at`, `l`.`dob`, `l`.`email`, `l`.`enroll_date`, `l`.`first_name`, `l`.`form_url`, `l`.`g5_certification`, `l`.`gender`, `l`.`is_abrsm_g5`, `l`.`is_active`, `l`.`is_under_18`, `l`.`last_name`, `l`.`learner_level`, `l`.`level_type`, `l`.`middle_name`, `l`.`note`, `l`.`org_id`, `l`.`otherfile_url`, `l`.`payment_period`, `l`.`photo`, `l`.`referrer`, `l`.`referrer_learner_id`, `l`.`user_id`
FROM `ablemusic`.`learner` AS `l`
WHERE `l`.`org_id` IN (1)
2019-08-08 10:18:36.248 +12:00 [INF] Executed DbCommand (69ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `w`.`waiting_id`, `w`.`begin_date`, `w`.`comment`, `w`.`concert_fee`, `w`.`concert_fee_name`, `w`.`course_instance_id`, `w`.`course_name`, `w`.`created_at`, `w`.`due_date`, `w`.`end_date`, `w`.`group_course_instance_id`, `w`.`invoice_num`, `w`.`is_activate`, `w`.`is_confirmed`, `w`.`is_email_sent`, `w`.`is_paid`, `w`.`learner_id`, `w`.`learner_name`, `w`.`lesson_fee`, `w`.`lesson_note_fee_name`, `w`.`lesson_quantity`, `w`.`note_fee`, `w`.`other1_fee`, `w`.`other1_fee_name`, `w`.`other2_fee`, `w`.`other2_fee_name`, `w`.`other3_fee`, `w`.`other3_fee_name`, `w`.`owing_fee`, `w`.`paid_fee`, `w`.`term_id`, `w`.`total_fee`
FROM `ablemusic`.`invoice_waiting_confirm` AS `w`
INNER JOIN `ablemusic`.`learner` AS `l` ON `w`.`learner_id` = `l`.`learner_id`
WHERE `l`.`org_id` IN (1) AND (`w`.`is_confirmed` = 0)
2019-08-08 10:18:36.634 +12:00 [INF] Executed DbCommand (54ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `l`.`lesson_id`, `l`.`begin_time`, `l`.`course_instance_id`, `l`.`created_at`, `l`.`end_time`, `l`.`group_course_instance_id`, `l`.`invoice_num`, `l`.`is_canceled`, `l`.`is_changed`, `l`.`is_confirm`, `l`.`is_paid`, `l`.`is_trial`, `l`.`learner_id`, `l`.`new_lesson_id`, `l`.`org_id`, `l`.`reason`, `l`.`room_id`, `l`.`teacher_id`, `l`.`trial_course_id`
FROM `ablemusic`.`lesson` AS `l`
WHERE (`l`.`begin_time` IS NOT NULL AND (`l`.`is_canceled` = 1)) AND `l`.`org_id` IN (1)
2019-08-08 10:18:36.862 +12:00 [INF] Executed DbCommand (55ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `l`.`lesson_id`, `l`.`begin_time`, `l`.`course_instance_id`, `l`.`created_at`, `l`.`end_time`, `l`.`group_course_instance_id`, `l`.`invoice_num`, `l`.`is_canceled`, `l`.`is_changed`, `l`.`is_confirm`, `l`.`is_paid`, `l`.`is_trial`, `l`.`learner_id`, `l`.`new_lesson_id`, `l`.`org_id`, `l`.`reason`, `l`.`room_id`, `l`.`teacher_id`, `l`.`trial_course_id`
FROM `ablemusic`.`lesson` AS `l`
WHERE ((`l`.`begin_time` IS NOT NULL AND `l`.`org_id` IN (1)) AND ((`l`.`is_canceled` <> 1) OR `l`.`is_canceled` IS NULL)) AND (`l`.`is_changed` = 1)
2019-08-08 10:18:37.040 +12:00 [INF] Executed DbCommand (53ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `a`.`amendment_id`, `a`.`amend_type`, `a`.`begin_date`, `a`.`begin_time`, `a`.`course_instance_id`, `a`.`course_schedule_id`, `a`.`created_at`, `a`.`day_of_week`, `a`.`end_date`, `a`.`end_time`, `a`.`is_temporary`, `a`.`learner_id`, `a`.`org_id`, `a`.`reason`, `a`.`room_id`, `a`.`teacher_id`
FROM `ablemusic`.`amendment` AS `a`
WHERE `a`.`org_id` IN (1)
2019-08-08 10:18:37.220 +12:00 [INF] Executed DbCommand (54ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `a`.`amendment_id`, `a`.`amend_type`, `a`.`begin_date`, `a`.`begin_time`, `a`.`course_instance_id`, `a`.`course_schedule_id`, `a`.`created_at`, `a`.`day_of_week`, `a`.`end_date`, `a`.`end_time`, `a`.`is_temporary`, `a`.`learner_id`, `a`.`org_id`, `a`.`reason`, `a`.`room_id`, `a`.`teacher_id`
FROM `ablemusic`.`amendment` AS `a`
WHERE `a`.`org_id` IN (1)
2019-08-08 10:18:38.620 +12:00 [INF] Executed DbCommand (61ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `l`.`lesson_id`, `l`.`begin_time`, `l`.`course_instance_id`, `l`.`created_at`, `l`.`end_time`, `l`.`group_course_instance_id`, `l`.`invoice_num`, `l`.`is_canceled`, `l`.`is_changed`, `l`.`is_confirm`, `l`.`is_paid`, `l`.`is_trial`, `l`.`learner_id`, `l`.`new_lesson_id`, `l`.`org_id`, `l`.`reason`, `l`.`room_id`, `l`.`teacher_id`, `l`.`trial_course_id`
FROM `ablemusic`.`lesson` AS `l`
WHERE (`l`.`is_canceled` <> 1) OR `l`.`is_canceled` IS NULL
